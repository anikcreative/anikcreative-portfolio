{"version":3,"sources":["theme/Primordial.ts","theme/Theme.tsx","content/Navigation/Logo.tsx","contexts/AppContext.tsx","content/Navigation/Nav.tsx","components/Layout/Section.tsx","components/TextContent/Headings.tsx","components/TextContent/Text.tsx","components/Interactive/Button.tsx","components/Interactive/TextButton.tsx","content/Footer/Footer.tsx","content/Intro/Intro.tsx","content/Intro/IntroButtons.tsx","content/Contact/Contact.tsx","content/Backdrops/Backdrop.tsx","content/Backdrops/BackdropImageSpacer.tsx","images.ts","content/Intro/IntroPart1.tsx","content/Intro/IntroPart2.tsx","content/Intro/IntroPart3.tsx","content/Work/WorkItemImage.tsx","content/Work/WorkItemDetail.tsx","content/Work/WorkItem.tsx","content/Work/WorkItems/WorkItemData.ts","content/Work/WorkItems/ProjectInsight.tsx","content/Work/WorkItems/FloodReady.tsx","content/Work/WorkItems/FrostEnsemble.tsx","content/Work/WorkItems/MWPStudio.tsx","content/Work/index.tsx","content/About/index.tsx","ScrollArea.tsx","Loader.tsx","App.tsx","MountApp.tsx","serviceWorker.js","index.js"],"names":["Colors","reduceColorOpacity","color","factor","factorNormalized","replace","Theme","GlobalStyleWrapper","LinkStyles","styled","div","createGlobalStyle","Logo","StyledLogo","className","version","id","xmlns","xmlnsXlink","xmlSpace","viewBox","transform","d","svg","AppContext","React","createContext","currentScrollTop","setCurrentScrollTop","scrollTop","viewportWidth","AppContextProvider","props","useState","window","innerWidth","setViewportWidth","handleViewportResize","event","useLayoutEffect","addEventListener","removeEventListener","state","Provider","value","children","Nav","appContext","useContext","isVisible","setIsVisible","useEffect","navVisibilityUpperLimit","innerHeight","determineNavVisibility","StyledNav","opacity","nav","Section","section","h1","Heading2","h2","Heading3","h3","h4","h5","span","Paragraph","p","addSpaceBefore","addSpaceAfter","Button","importance","rest","ref","StyledButton","button","margin","Footer","StyledFooter","containerRef","Intro","StyledIntro","IntroInnerWrapper","textColor","textShadow","IntroSpacer","IntroMessage","IntroButtons","IntroButtonsContainer","zIndex","visible","PrimaryIntroButton","onClick","title","SecondaryIntroButton","IntroButton","Contact","StyledContact","Backdrop","viewportSize","setViewportSize","vw","StyledBackdrop","backgroundcolor","backgroundColor","height","heightAsPercentage","zindex","ImageContainer","image","StyledBackdropImage","src","forcedHeightBreakpoint","img","__IMAGES__","IntroPart1","setHeightAsPercentage","introPaneHeight","calculateHeightAsPercentage","order","Screen","IntroPart2","textShadowSetting","MarginDecorationBase","WorkItemImage","WorkItemImageContainer","show","WorkItemImageFrame","imageSrc","WorkItemDetail","WorkItemDetailContainer","WorkItemTitle","WorkItemSubtitle","subtitle","WorkItemDescription","description","detailsButtonLabel","detailsLink","MoreDetailsLinkWrapper","href","target","ComingSoonMessage","a","WorkItem","showImage","setShowImage","showDetail","setShowDetail","topOffset","setTopOffset","workItemRef","useRef","displayImage","displayDetail","handleScroll","debounce","current","setTimeout","self","getBoundingClientRect","top","WorkItemContainer","imgURL","WorkItem_ProjectInsight","WorkItem_FloodReady","WorkItem_FrostEnsemble","WorkItem_MWPStudio","ProjectInsight","FloodReady","FrostEnsemble","MWPStudio","Work","StyledWorkSection","About","StyledAboutSection","ScrollArea","onScrollFrame","values","renderTrackVertical","trackProps","style","width","right","bottom","borderRadius","renderThumbVertical","thumbProps","customStyles","Loader","completion","setCompletion","loaderState","setLoaderState","delay","setDelay","useInterval","currentCompletion","StyledLoader","ProgressBarTop","ProgressBarRight","getRightCompletion","ProgressBarBottom","getBottomCompletion","ProgressBarLeft","getLeftCompletion","ProgressBarBase","App","borderColor","setBorderColor","introButtonsVisible","setIntroButtonsVisible","invertedScrollThumbHeight","setInvertedScrollThumbHeight","invertedScrollThumbAnchor","setInvertedScrollThumbAnchor","introButtonsRef","contentContainerRef","aboutContainerRef","contactContainerRef","footerContainerRef","calculateInvertedScrollThumbHeight","scrollbarVerticalThumb","querySelector","introBackdrop","document","contactBounds","scrollThumbBounds","introBackdropBounds","introButtonsBottom","worksContainerTop","determineIntroButtonsVisibility","offsetTop","AppContainer","BackdropContainer","Content","main","MountApp","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.492f2ae3.chunk.js","sourcesContent":["export const Colors = {\r\n  accent: \"hsla(356, 60%, 55%, 1.0)\",\r\n  bright: \"hsla(37, 90%, 68%, 1.0)\",\r\n  dark: \"hsla(203, 16%, 10%, 1.0)\",\r\n  medium: \"hsla(173, 5%, 38%, 1.0)\",\r\n  light: \"hsla(51, 100%, 93%, 1.0)\",\r\n  white: \"hsla(0, 0%, 100%, 1.0)\",\r\n  grayLight: \"hsla(0, 0%, 80%, 1.0)\",\r\n  grayMedium: \"hsla(0, 0%, 67%, 1.0)\",\r\n\r\n  textDefault: \"hsla(203, 16%, 10%, 1.0)\",\r\n  textAccent: \"hsla(356, 60%, 55%, 1.0)\",\r\n  textHighlight: \"hsla(203, 16%, 10%, 1.0)\",\r\n  textLight: \"hsla(173, 5%, 38%, 1.0)\",\r\n  link: \"hsla(356, 60%, 55%, 1.0)\",\r\n};","import React from \"react\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nimport { Colors } from \"./Primordial\";\r\nexport { Colors } from \"./Primordial\";\r\n\r\nexport function reduceColorOpacity(color: string, factor: number): string {\r\n  // Reduces color opacity by the indicated factor.\r\n  // \"factor\" should be between 0.0 and 1.0.\r\n  // If \"factor\" is less than 0.0, a value of 0.0 will be used instead.\r\n  // If \"factor\" is greater than 1.0, a value of 1.0 will be used instead.\r\n\r\n  let factorNormalized: number;\r\n  if (factor < 0.0) factorNormalized = 0.0;\r\n  else if (factor > 1.0) factorNormalized = 1.0;\r\n  else factorNormalized = factor;\r\n  \r\n  return color.replace(\"1.0\", `${1.0 - factorNormalized}`);\r\n}\r\n\r\nexport const Theme: React.FC = () => {\r\n  return (\r\n    <GlobalStyleWrapper>\r\n      <LinkStyles />\r\n    </GlobalStyleWrapper>\r\n  );\r\n}\r\nconst GlobalStyleWrapper = styled.div`\r\n`;\r\n\r\n// Links\r\nexport const LinkStyles = createGlobalStyle`\r\n  body {\r\n    a {\r\n      transition: 0.2s;\r\n    }\r\n\r\n    a,\r\n    a:visited {\r\n      color: ${Colors.accent};\r\n\r\n      &:hover,\r\n      &:active,\r\n      &:focus,\r\n      &:active:focus {\r\n        color: ${Colors.medium};\r\n      }\r\n    }\r\n\r\n    a.inverted,\r\n    a.inverted:visited {\r\n      color: ${Colors.white};\r\n\r\n      &:hover,\r\n      &:active,\r\n      &:focus,\r\n      &:active:focus {\r\n        color: ${Colors.bright};\r\n      }\r\n    }\r\n  }\r\n`;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Colors } from \"../../theme\";\r\n\r\nexport const Logo = () => (\r\n  <StyledLogo \r\n    className=\"logo-svg\"\r\n    version=\"1.1\" \r\n    id=\"Layer_1\" \r\n    xmlns=\"https://www.w3.org/2000/svg\" \r\n    xmlnsXlink=\"https://www.w3.org/1999/xlink\"  \r\n    xmlSpace=\"preserve\"\r\n    viewBox=\"0 20 220 80\"\r\n  >\r\n    <g transform=\"translate(-899 172)\">\r\n      <g className=\"st0 shadow\">\r\n        <path className=\"st1\" d=\"M947.1-91.4H927l-3.1,9.4h-16.6l20.7-56.4h18.2L966.8-82h-16.6L947.1-91.4z M943.2-103.3l-6.1-18.4l-6.2,18.4\r\n          H943.2z\"/>\r\n        <path className=\"st1\" d=\"M1025.3-82h-15.8l-20.8-31.6V-82H973v-56.6h15.8l20.8,32v-32h15.8V-82z\"/>\r\n        <path className=\"st1\" d=\"M1051.3-138.6V-82h-15.8v-56.6H1051.3z\"/>\r\n        <path className=\"st1\" d=\"M1092.2-111l21.9,29h-19l-17.8-25v25h-15.8v-56.6h15.8v24.5l18-24.5h18.8L1092.2-111z\"/>\r\n      </g>\r\n      <g className=\"st0 fill\">\r\n        <path className=\"st2\" d=\"M944.1-91.4H924l-3.1,9.4h-16.6l20.7-56.4h18.2L963.8-82h-16.6L944.1-91.4z M940.2-103.3l-6.1-18.4l-6.2,18.4\r\n          H940.2z\"/>\r\n        <path className=\"st2\" d=\"M1022.3-82h-15.8l-20.8-31.6V-82H970v-56.6h15.8l20.8,32v-32h15.8V-82z\"/>\r\n        <path className=\"st2\" d=\"M1048.3-138.6V-82h-15.8v-56.6H1048.3z\"/>\r\n        <path className=\"st2\" d=\"M1089.2-111l21.9,29h-19l-17.8-25v25h-15.8v-56.6h15.8v24.5l18-24.5h18.8L1089.2-111z\"/>\r\n      </g>\r\n      <g className=\"st0 outline\">\r\n        <path className=\"st3\" d=\"M941.1-95.4H921l-3.1,9.4h-16.6l20.7-56.4h18.2L960.8-86h-16.6L941.1-95.4z M937.2-107.3l-6.1-18.4l-6.2,18.4\r\n          H937.2z\"/>\r\n        <path className=\"st3\" d=\"M1019.3-86h-15.8l-20.8-31.6V-86H967v-56.6h15.8l20.8,32v-32h15.8V-86z\"/>\r\n        <path className=\"st3\" d=\"M1045.3-142.6V-86h-15.8v-56.6H1045.3z\"/>\r\n        <path className=\"st3\" d=\"M1086.2-115l21.9,29h-19l-17.8-25v25h-15.8v-56.6h15.8v24.5l18-24.5h18.8L1086.2-115z\"/>\r\n      </g>\r\n    </g>\r\n  </StyledLogo>\r\n);\r\nexport default Logo;\r\n\r\nconst StyledLogo = styled.svg`\r\n  height: 32px;\r\n  transition: 0.2s;\r\n\r\n  .st0, .st1, .st2, .st3,\r\n  path {\r\n    transition: 0.2s;\r\n  }\r\n  \r\n  .st0 {\r\n    enable-background: new;\r\n  }\r\n  .st1 {\r\n    fill: #47D1A7;\r\n  }\r\n  .st2 {\r\n    fill: ${Colors.accent};\r\n  }\r\n  .st3 {\r\n    fill: none;\r\n    stroke: #000000;\r\n    opacity: 0.8;\r\n    stroke-width: 2;\r\n  }\r\n`;","import React, { useLayoutEffect } from \"react\";\r\n\r\nexport interface AppContextState {\r\n  currentScrollTop: number;\r\n  setCurrentScrollTop: (scrollTop: number) => void;\r\n  \r\n  viewportWidth: number;\r\n}\r\n\r\nexport const AppContext = React.createContext<AppContextState>({\r\n  currentScrollTop: 0,\r\n  setCurrentScrollTop: (scrollTop: number) => {},\r\n\r\n  viewportWidth: 0\r\n});\r\n\r\nexport const AppContextProvider: React.FC = (props) => {\r\n  const [currentScrollTop, setCurrentScrollTop] = React.useState<number>(0);\r\n  const [viewportWidth, setViewportWidth] = React.useState<number>(window.innerWidth);\r\n  const handleViewportResize = (event?: any) => setViewportWidth(window.innerWidth);\r\n  useLayoutEffect(() => {\r\n    window.addEventListener(\"resize\", handleViewportResize);\r\n    return () => window.removeEventListener(\"resize\", handleViewportResize);\r\n  }, []);\r\n\r\n  const state: AppContextState = {\r\n    currentScrollTop: currentScrollTop,\r\n    setCurrentScrollTop: setCurrentScrollTop,\r\n\r\n    viewportWidth: viewportWidth\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={state}>\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n}","import React, { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Colors } from \"../../theme\";\r\nimport Logo from \"./Logo\";\r\nimport NavMenu from \"./NavMenu\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\n\r\ninterface NavProps {\r\n  backgroundColor: string;\r\n  textColor: string;\r\n}\r\nconst Nav: React.FunctionComponent<NavProps> = (props: NavProps): JSX.Element => {\r\n  const appContext = useContext(AppContext);\r\n  const [isVisible, setIsVisible] = useState<boolean>(false);\r\n\r\n  // Determine if nav should be shown, based on current scroll position\r\n  const determineNavVisibility = (scrollTop: number) => {\r\n    const navVisibilityUpperLimit = (2.5 * window.innerHeight);\r\n    if (scrollTop < navVisibilityUpperLimit) setIsVisible(false);\r\n    else setIsVisible(true);\r\n  }\r\n  \r\n  const handleScroll = () => {\r\n    const scrollTop: number = appContext.currentScrollTop;\r\n    determineNavVisibility(scrollTop);\r\n  }\r\n  useEffect(handleScroll, [appContext.currentScrollTop]);\r\n\r\n  return (\r\n    <StyledNav\r\n      opacity={isVisible ? 1.0 : 0.0}\r\n      className=\"navbar\"\r\n      {...props}\r\n    >\r\n      <Logo />\r\n    </StyledNav>\r\n  );\r\n}\r\nexport default Nav;\r\n\r\ninterface StyledNavProps {\r\n  opacity: number;\r\n}\r\nconst StyledNav = styled.nav<StyledNavProps>`\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  position: absolute;\r\n  \r\n  top: 0;\r\n  padding: 10px 0;\r\n\r\n  background: none;\r\n  color: ${Colors.white};\r\n\r\n  opacity: ${props => props.opacity};\r\n\r\n  transition: background 0.2s, opacity 0.2s;\r\n  z-index: 5;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    left: 20px;\r\n  }\r\n\r\n  @media screen and (min-width: 600px) and (max-width: 1064px) {\r\n    left: 40px;\r\n  }\r\n\r\n  @media screen and (min-width: 1064px) {\r\n    left: calc(50% - 512px);\r\n  }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Section = styled.section`\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    padding-left: 20px;\r\n    padding-right: 40px;\r\n  }\r\n\r\n  @media screen and (min-width: 600px) and (max-width: 1064px) {\r\n    padding-left: 40px;\r\n    padding-right: 60px;\r\n  }\r\n\r\n  @media screen and (min-width: 1064px) {\r\n    padding-left: calc(50% - 512px);\r\n    padding-right: calc(50% - 492px);\r\n  }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Heading1 = styled.h1`\r\n  font-weight: 800;\r\n  margin: 0;\r\n  \r\n  @media screen and (max-width: 400px) {\r\n    font-size: 3.4rem;\r\n  }\r\n\r\n  @media screen and (min-width: 400px) and (max-width: 450px) {\r\n    font-size: 3.6rem;\r\n  }\r\n\r\n  @media screen and (min-width: 450px) and (max-width: 600px) {\r\n    font-size: 4.0rem;\r\n  }\r\n\r\n  @media screen and (min-width: 600px) and (max-width: 800px) {\r\n    font-size: 4.6rem;\r\n  }\r\n\r\n  @media screen and (min-width: 800px) {\r\n    font-size: 5.0rem;\r\n  }\r\n`;\r\n\r\nexport const Heading2 = styled.h2`\r\n  font-weight: 600;\r\n  margin: 0;\r\n  \r\n  @media screen and (max-width: 400px) {\r\n    font-size: 2.0rem;\r\n  }\r\n\r\n  @media screen and (min-width: 400px) and (max-width: 450px) {\r\n    font-size: 2.2rem;\r\n  }\r\n\r\n  @media screen and (min-width: 450px) and (max-width: 600px) {\r\n    font-size: 2.6rem;\r\n  }\r\n\r\n  @media screen and (min-width: 600px) and (max-width: 800px) {\r\n    font-size: 3.2rem;\r\n  }\r\n\r\n  @media screen and (min-width: 800px) {\r\n    font-size: 4.0rem;\r\n  }\r\n`;\r\n\r\nexport const Heading3 = styled.h3`\r\n  font-weight: 600;\r\n  margin: 0;\r\n  \r\n  @media screen and (max-width: 400px) {\r\n    font-size: 1.8rem;\r\n  }\r\n\r\n  @media screen and (min-width: 400px) and (max-width: 450px) {\r\n    font-size: 2.0rem;\r\n  }\r\n\r\n  @media screen and (min-width: 450px) and (max-width: 600px) {\r\n    font-size: 2.2rem;\r\n  }\r\n\r\n  @media screen and (min-width: 600px) and (max-width: 800px) {\r\n    font-size: 2.4rem;\r\n  }\r\n\r\n  @media screen and (min-width: 800px) {\r\n    font-size: 2.8rem;\r\n  }\r\n`;\r\n\r\nexport const Heading4 = styled.h4`\r\n  font-weight: 600;\r\n  margin: 0;\r\n  \r\n  @media screen and (max-width: 400px) {\r\n    font-size: 1.4rem;\r\n  }\r\n\r\n  @media screen and (min-width: 400px) and (max-width: 450px) {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  @media screen and (min-width: 450px) and (max-width: 600px) {\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media screen and (min-width: 600px) and (max-width: 800px) {\r\n    font-size: 1.8rem;\r\n  }\r\n\r\n  @media screen and (min-width: 800px) {\r\n    font-size: 2.1rem;\r\n  }\r\n`;\r\n\r\nexport const Heading5 = styled.h5`\r\n  font-weight: 400;\r\n  margin: 0;\r\n\r\n  @media screen and (max-width: 450px) {\r\n    font-size: 1.4rem;\r\n  }\r\n\r\n  @media screen and (min-width: 450px) and (max-width: 600px) {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  @media screen and (min-width: 600px) and (max-width: 800px) {\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media screen and (min-width: 800px) {\r\n    font-size: 1.8rem;\r\n  }\r\n`;","import styled from \"styled-components\";\r\nimport { Colors } from \"../../theme/Theme\";\r\n\r\nexport const AccentText = styled.span`\r\n  color: ${Colors.accent};\r\n`;\r\n\r\ninterface ParagraphProps {\r\n  addSpaceBefore?: boolean;\r\n  addSpaceAfter?: boolean;\r\n}\r\nexport const Paragraph = styled.p<ParagraphProps>`\r\n  font-weight: 400;\r\n  margin-top: ${props => props.addSpaceBefore ? '24px' : '4px'};\r\n  margin-bottom: ${props => props.addSpaceAfter ? '24px' : '4px'};\r\n\r\n  @media screen and (max-width: 400px) {\r\n    font-size: 1.4rem;\r\n  }\r\n\r\n  @media screen and (min-width: 400px) and (max-width: 600px) {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  @media screen and (min-width: 600px) and (max-width: 800px) {\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media screen and (min-width: 800px) {\r\n    font-size: 1.8rem;\r\n  }\r\n`;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Colors, reduceColorOpacity } from \"../../theme/Theme\";\r\n\r\ntype ButtonImportance = \"primary\" | \"secondary\" | \"tertiary\";\r\ninterface ButtonProps extends React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, StyledButtonProps {\r\n  ref?: React.RefObject<HTMLButtonElement>;\r\n}\r\nexport const Button: React.FC<ButtonProps> = (props: ButtonProps): JSX.Element => {\r\n  const { className, importance, ref, ...rest } = props;\r\n\r\n  const renderClassName = (): string => {\r\n    return `${className} btn btn-${importance}`;\r\n  }\r\n\r\n  return (\r\n    <StyledButton\r\n      {...rest}\r\n      className={renderClassName()}\r\n      ref={props.ref}\r\n      importance={importance}\r\n    />\r\n  );\r\n}\r\nexport default Button;\r\n\r\ninterface StyledButtonProps {\r\n  importance: ButtonImportance;\r\n  margin?: \"left\" | \"right\";\r\n}\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  position: relative;\r\n  margin-top: 8px;\r\n  margin-right: ${props => props.margin === \"right\" ? 16 : 0}px;\r\n  margin-bottom: 4px;\r\n  margin-left: ${props => props.margin === \"left\" ? 16 : 0}px;\r\n  padding: 12px 20px;\r\n\r\n  background: ${props => props.importance === \"primary\" ?\r\n    Colors.accent : \"transparent\"};\r\n  border: 1px solid ${Colors.accent};\r\n  box-shadow: 0 0 0 0 ${reduceColorOpacity(Colors.accent, 0.7)};\r\n  opacity: 0.9;\r\n\r\n  font-size: ${props => props.importance === \"tertiary\" ?\r\n    1.3 : 1.4}rem;\r\n  font-weight: 600;\r\n  color: ${props => props.importance === \"primary\" ?\r\n    Colors.white : Colors.accent};\r\n  text-transform: ${props => props.importance === \"tertiary\" ?\r\n    \"none\" : \"uppercase\"};\r\n  letter-spacing: 0.04rem;\r\n\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 1px 4px ${reduceColorOpacity(Colors.accent, 0.7)};\r\n    opacity: 1.0;\r\n\r\n    text-shadow: 0 0 3px ${props => reduceColorOpacity(\r\n      (props.importance === \"primary\" ?\r\n        Colors.white :\r\n        Colors.accent),\r\n      0.65)\r\n    };\r\n  }\r\n`;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Colors } from \"../../theme/Theme\";\r\n\r\ninterface TextButtonProps extends React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> {\r\n  ref?: React.RefObject<HTMLButtonElement>;\r\n}\r\nexport const TextButton: React.FC<TextButtonProps> = (props: TextButtonProps): JSX.Element => {\r\n  const { className, ref, ...rest } = props;\r\n\r\n  const renderClassName = (): string => {\r\n    return `${className} btn btn-text`;\r\n  }\r\n\r\n  return (\r\n    <StyledButton\r\n      {...rest}\r\n      className={renderClassName()}\r\n      ref={props.ref}\r\n    />\r\n  );\r\n}\r\nexport default TextButton;\r\n\r\n\r\nconst StyledButton = styled.button`\r\n  position: relative;\r\n\r\n  background: none;\r\n  border: none;\r\n  box-shadow: none;\r\n  color: ${Colors.white};\r\n  outline: none;\r\n\r\n  &:active,\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Colors } from \"../../theme/Theme\";\r\nimport { Section } from \"../../components\";\r\nimport { ContentSectionProps } from \"../ContentSectionProps\";\r\n\r\nconst Footer: React.FunctionComponent<ContentSectionProps> = \r\n  (props: ContentSectionProps): JSX.Element => {\r\n  return (\r\n    <StyledFooter ref={props.containerRef}>\r\n      Sup. this is a footer.\r\n    </StyledFooter>\r\n  );\r\n}\r\nexport default Footer;\r\n\r\nconst StyledFooter = styled(Section)`\r\n  padding: 10px 0;\r\n\r\n  background: ${Colors.dark};\r\n  border-top: 1px solid #252525;\r\n  color: ${Colors.white};\r\n\r\n  font-size: 1.4rem;\r\n`;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Section, Heading2 } from \"../../components\";\r\n\r\n\r\ninterface IntroProps {\r\n  children?: React.ReactNode | React.ReactNodeArray;\r\n  textColor?: string;\r\n  textShadow?: string;\r\n}\r\nconst Intro: React.FunctionComponent<IntroProps> = (props: IntroProps) => {\r\n  return (\r\n    <StyledIntro className=\"intro-text\">\r\n      <IntroInnerWrapper\r\n        className=\"intro-text-inner-wrapper\"\r\n        textColor={props.textColor || \"black\"}\r\n        textShadow={props.textShadow || \"none\"}\r\n      >\r\n        {props.children}\r\n      </IntroInnerWrapper>\r\n    </StyledIntro>\r\n  );\r\n}\r\nexport default Intro;\r\n\r\nexport const StyledIntro = styled(Section)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  align-items: flex-start;\r\n  justify-content: flex-start; \r\n\r\n  position: absolute;\r\n  top: calc(50vh - 40px);\r\n\r\n  @media screen and (max-width: 600px) {\r\n    top: calc(50vh - 40px);\r\n  }\r\n\r\n  @media screen and (min-width: 600px) and (max-width: 800px) {\r\n    top: calc(50vh - 20px);\r\n  }\r\n\r\n  @media screen and (min-width: 800px) {\r\n    top: calc(50vh - 40px);\r\n  }\r\n\r\n  z-index: 10;\r\n`;\r\n\r\ninterface IntroInnerWrapperProps {\r\n  textColor: string;\r\n  textShadow: string;\r\n}\r\nconst IntroInnerWrapper = styled.div<IntroInnerWrapperProps>`\r\n  color: ${props => props.textColor};\r\n  text-shadow: ${props => props.textShadow};\r\n  user-select: none;\r\n\r\n  @media screen and (max-width: 450px) {\r\n    max-width: unset;\r\n    margin-top: -48px;\r\n  }\r\n\r\n  @media screen and (min-width: 450px) and (max-width: 600px) {\r\n    max-width: unset;\r\n\r\n    @media (max-height: 300px) {\r\n      & {\r\n        margin-top: -20px;\r\n      }\r\n      & > h2 {\r\n        font-size: 1.8rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 300px) and (max-height: 456px) {\r\n      & {\r\n        margin-top: -48px;\r\n      }\r\n      & > h2 {\r\n        font-size: 2.0rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 456px) and (max-height: 548px) {\r\n      & {\r\n        margin-top: -64px;\r\n      }\r\n      & > h2 {\r\n        font-size: 2.3rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 548px) {\r\n      & {\r\n        margin-top: -80px;\r\n      }\r\n      & > h2 {\r\n        font-size: 2.6rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 600px) and (max-width: 800px) {\r\n    max-width: 600px;\r\n\r\n    @media (max-height: 300px) {\r\n      & {\r\n        margin-top: -48px;\r\n      }\r\n      & > h2 {\r\n        font-size: 1.8rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 300px) and (max-height: 456px) {\r\n      & {\r\n        margin-top: -80px;\r\n      }\r\n      & > h2 {\r\n        font-size: 2.4rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 456px) and (max-height: 548px) {\r\n      & {\r\n        margin-top: -108px;\r\n      }\r\n      & > h2 {\r\n        font-size: 2.8rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 548px) {\r\n      & {\r\n        margin-top: -100px;\r\n      }\r\n      & > h2 {\r\n        font-size: 3.2rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 800px) {\r\n    max-width: 600px;\r\n\r\n    @media (max-height: 300px) {\r\n      & {\r\n        margin-top: -36px;\r\n      }\r\n      & > h2 {\r\n        font-size: 2.2rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 300px) and (max-height: 456px) {\r\n      & {\r\n        margin-top: -60px;\r\n      }\r\n      & > h2 {\r\n        font-size: 2.8rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 456px) and (max-height: 548px) {\r\n      & {\r\n        margin-top: -100px;\r\n      }\r\n      & > h2 {\r\n        font-size: 3.4rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 548px) {\r\n      & {\r\n        margin-top: -136px;\r\n      }\r\n      & > h2 {\r\n        font-size: 4.0rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const IntroSpacer = styled(Section)`\r\n  min-height: 200vh;\r\n`;\r\n\r\nexport const IntroMessage = styled(Heading2)`\r\n  margin-top: 0;\r\n`;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Colors } from \"../../theme/Theme\";\r\n\r\ninterface IntroButtonsProps {\r\n  visible: boolean;\r\n  containerRef?: React.RefObject<HTMLDivElement>;\r\n}\r\nconst IntroButtons: React.FC<IntroButtonsProps> = (props: IntroButtonsProps) => {\r\n  const handleViewWorkRequested = () => {\r\n    // Go to works section\r\n  }\r\n\r\n  const handleContactRequested = () => {\r\n    // go to contact section\r\n  }\r\n\r\n  return (\r\n    <IntroButtonsContainer\r\n      className=\"intro-buttons-container\"\r\n      ref={props.containerRef}\r\n      zIndex={props.visible ? 4 : 1}\r\n      opacity={props.visible ? 1 : 0}\r\n    >\r\n      <PrimaryIntroButton\r\n       className=\"intro-button intro-button-see-work\"\r\n       onClick={handleViewWorkRequested}\r\n       title=\"See my work\"\r\n      >\r\n        See My Work\r\n      </PrimaryIntroButton>\r\n\r\n      <SecondaryIntroButton\r\n        className=\"intro-button intro-button-contact\"\r\n        onClick={handleContactRequested}\r\n        title=\"Get in touch\"\r\n      >\r\n        Get In Touch\r\n      </SecondaryIntroButton>\r\n    </IntroButtonsContainer>\r\n  );\r\n}\r\nexport default IntroButtons;\r\n\r\ninterface IntroButtonsContainerProps {\r\n  zIndex: number;\r\n  opacity: number;\r\n}\r\nconst IntroButtonsContainer = styled.div<IntroButtonsContainerProps>`\r\n  position: absolute;\r\n  z-index: ${props => props.zIndex};\r\n  opacity: ${props => props.opacity};\r\n  transition: opacity 0.4s, font-size 0.4s;\r\n\r\n  @media screen and (max-width: 450px) {\r\n    top: calc(50% + 48px);\r\n    left: 20px;\r\n\r\n    font-size: 1.3rem;\r\n  }\r\n\r\n  @media screen and (min-width: 450px) and (max-width: 600px) {\r\n    left: 20px;\r\n    font-size: 1.3rem;\r\n\r\n    @media (max-height: 300px) {\r\n      & {\r\n        top: calc(50% + 24px);\r\n        font-size: 1.3rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 300px) and (max-height: 456px) {\r\n      & {\r\n        top: calc(50% + 32px);\r\n        font-size: 1.4rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 456px) and (max-height: 548px) {\r\n      & {\r\n        top: calc(50% + 40px);\r\n        font-size: 1.5rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 548px) {\r\n      & {\r\n        top: calc(50% + 32px);\r\n        font-size: 1.5rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 600px) and (max-width: 800px) {\r\n    left: 40px;\r\n\r\n    @media (max-height: 300px) {\r\n      & {\r\n        top: calc(50% + 16px);\r\n        font-size: 1.3rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 300px) and (max-height: 456px) {\r\n      & {\r\n        top: calc(50% + 40px);\r\n        font-size: 1.4rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 456px) and (max-height: 548px) {\r\n      & {\r\n        top: calc(50% + 40px);\r\n        font-size: 1.5rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 548px) {\r\n      & {\r\n        top: calc(50% + 60px);\r\n        font-size: 1.5rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 800px) and (max-width: 1064px) {\r\n    left: 40px;\r\n\r\n    @media (max-height: 300px) {\r\n      & {\r\n        top: calc(50% + 24px);\r\n        font-size: 1.3rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 300px) and (max-height: 456px) {\r\n      & {\r\n        top: calc(50% + 32px);\r\n        font-size: 1.4rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 456px) and (max-height: 548px) {\r\n      & {\r\n        top: calc(50% + 48px);\r\n        font-size: 1.5rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 548px) {\r\n      & {\r\n        top: calc(50% + 48px);\r\n        font-size: 1.6rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1064px) {\r\n    left: calc(50% - 512px);\r\n    \r\n    @media (max-height: 300px) {\r\n      & {\r\n        top: calc(50% + 24px);\r\n        font-size: 1.3rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 300px) and (max-height: 456px) {\r\n      & {\r\n        top: calc(50% + 32px);\r\n        font-size: 1.4rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 456px) and (max-height: 548px) {\r\n      & {\r\n        top: calc(50% + 48px);\r\n        font-size: 1.5rem;\r\n      }\r\n    }\r\n\r\n    @media (min-height: 548px) {\r\n      & {\r\n        top: calc(50% + 48px);\r\n        font-size: 1.6rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst IntroButton = styled.button`\r\n  display: inline-block;\r\n\r\n  border: 0;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n\r\n  transition: 0.2s;\r\n  cursor: pointer;\r\n  \r\n  @media screen and (max-width: 400px) {\r\n    padding: 10px 14px;\r\n\r\n    &:not(:last-child) {\r\n      margin: 0 16px 16px 0;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 400px) and (max-width: 600px) {\r\n    padding: 12px 18px;\r\n\r\n    &:not(:last-child) {\r\n      margin: 0 16px 16px 0;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 600px) and (max-width: 800px) {\r\n    padding: 16px 20px;\r\n\r\n    &:not(:last-child) {\r\n      margin: 0 16px 16px 0;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 800px) {\r\n    padding: 18px 32px;\r\n\r\n    &:not(:last-child) {\r\n      margin: 0 16px 16px 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PrimaryIntroButton = styled(IntroButton)`\r\n  background: hsla(356, 60%, 55%, 0.8);\r\n  border: 1px solid ${Colors.accent};\r\n  box-shadow: 0 0 0 0 hsla(356, 60%, 55%, 0.3);\r\n\r\n  color: ${Colors.white};\r\n\r\n  &:hover,\r\n  &:active {\r\n    background: hsla(356, 60%, 55%, 1.0);\r\n    box-shadow: 0 0 0 4px hsla(356, 60%, 55%, 0.3);\r\n    text-shadow: 0 0 2px hsla(0, 0%, 100%, 0.25);\r\n  }\r\n`;\r\n\r\nconst SecondaryIntroButton = styled(IntroButton)`\r\n  background: hsla(0, 0%, 100%, 0.9);\r\n  border: 1px solid ${Colors.accent};\r\n  box-shadow: 0 0 0 0 hsla(37, 90%, 100%, 0.2);\r\n\r\n  color: ${Colors.accent};\r\n\r\n  &:hover,\r\n  &:active {\r\n    background: hsla(0, 0%, 100%, 1.0);\r\n    box-shadow: 0 0 0 4px hsla(356, 60%, 55%, 0.3);\r\n    text-shadow: 0 0 2px hsla(356, 60%, 55%, 0.2);\r\n  }\r\n`;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Colors } from \"../../theme/Theme\";\r\nimport { Section } from \"../../components\";\r\nimport { ContentSectionProps } from \"../ContentSectionProps\";\r\n\r\nconst Contact: React.FunctionComponent<ContentSectionProps> = \r\n  (props: ContentSectionProps): JSX.Element => {\r\n  return (\r\n    <StyledContact ref={props.containerRef}>\r\n      Get in touch\r\n    </StyledContact>\r\n  );\r\n}\r\nexport default Contact;\r\n\r\nconst StyledContact = styled(Section)`\r\n  min-height: 100%;\r\n\r\n  background: ${Colors.dark};\r\n  color: ${Colors.textLight};\r\n`;","import React, { useContext, useLayoutEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\n\r\ntype ViewportSize = \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\";\r\n\r\nexport interface BackdropInstanceProps {\r\n  order: number;\r\n}\r\ninterface BackdropProps {\r\n  zIndex: number;\r\n  className?: string;\r\n  image?: string;\r\n  backgroundColor?: string;\r\n  heightAsPercentage?: number;\r\n  children?: React.ReactNode | React.ReactNodeArray;\r\n}\r\nconst Backdrop: React.FC<BackdropProps> = (props: BackdropProps): JSX.Element => {\r\n  const appContext = useContext(AppContext);\r\n\r\n  const getViewportSize = () => {\r\n    const vw: number = appContext.viewportWidth;\r\n    const getSize = (): ViewportSize => {\r\n      if (vw <= 600) return \"xs\";\r\n      else if (vw <= 900) return \"sm\";\r\n      else if (vw <= 1200) return \"md\";\r\n      else if (vw <= 1600) return \"lg\";\r\n      else if (vw <= 1920) return \"xl\";\r\n      else return \"xxl\";\r\n    }\r\n    setViewportSize(getSize());\r\n  }\r\n  const [viewportSize, setViewportSize] = useState<ViewportSize>(\"sm\");\r\n  useLayoutEffect(getViewportSize, [appContext.viewportWidth]);\r\n\r\n  const renderImageSrc = () => {\r\n    return `images/${props.image}/${props.image}_${viewportSize}.jpg`;\r\n  }\r\n\r\n  return (\r\n    <StyledBackdrop\r\n      className={`backdrop ${props.className}`}\r\n      backgroundcolor={props.backgroundColor || 'transparent'}\r\n      height={(props.heightAsPercentage || props.heightAsPercentage === 0) ? \r\n        props.heightAsPercentage : 100}\r\n      zindex={props.zIndex}\r\n    >\r\n      {props.children}\r\n      <ImageContainer>\r\n        {props.image && \r\n        <StyledBackdropImage\r\n          className=\"backdrop-image\"\r\n          src={renderImageSrc()}\r\n          forcedHeightBreakpoint={1140}\r\n          zIndex={5}\r\n        />}\r\n      </ImageContainer>\r\n    </StyledBackdrop>\r\n  );\r\n}\r\nexport default Backdrop;\r\n\r\n\r\n\r\ninterface StyledBackdropProps {\r\n  height: number;\r\n  backgroundcolor: string;\r\n  zindex: number;\r\n}\r\nconst StyledBackdrop = styled.div<StyledBackdropProps>`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: ${props => props.height}%;\r\n  top: 0;\r\n  left: 0;\r\n  background: ${props => props.backgroundcolor};\r\n  \r\n  transform: translateZ(0);\r\n  z-index: ${props => props.zindex};\r\n  overflow: hidden;\r\n`;\r\n\r\n\r\n\r\nconst ImageContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  filter: contrast(1.2);\r\n  z-index: 3;\r\n`;\r\ninterface StyledBackdropImageProps {\r\n  forcedHeightBreakpoint: number;\r\n  zIndex: number;\r\n}\r\nconst StyledBackdropImage = styled.img<StyledBackdropImageProps>`\r\n  min-width: 100%;\r\n  object-fit: cover;\r\n  transform: translateZ(0);\r\n  z-index: ${props => props.zIndex};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface BackdropImageSpacerProps {\r\n  containerRef?: any;\r\n}\r\nexport const BackdropImageSpacer: React.FunctionComponent<BackdropImageSpacerProps>= \r\n  (props: BackdropImageSpacerProps): JSX.Element => {\r\n  return (\r\n    <StyledBackdropImageSpacer\r\n      ref={props.containerRef}\r\n    />\r\n  );\r\n}\r\nconst StyledBackdropImageSpacer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: none;\r\n`;","export const __IMAGES__: string[] = [\r\n  \"topomap\",\r\n  \"atacama\",\r\n  \"anik_wall\",\r\n];","import React, { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Backdrop, { BackdropInstanceProps } from \"../Backdrops/Backdrop\";\r\nimport { Intro, IntroMessage } from \"..\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport { Colors } from \"../../theme/Theme\";\r\nimport { __IMAGES__ } from \"../../images\";\r\n\r\n\r\nexport const IntroPart1: React.FC<BackdropInstanceProps> = (props: BackdropInstanceProps) => {\r\n  const appContext = useContext(AppContext);\r\n  const [heightAsPercentage, setHeightAsPercentage] = useState<number>(100);\r\n  const textShadowSetting: string = \"2px -2px 2px #000000, 2px 2px 2px #000000, -2px -2px 2px #000000, -2px 2px 2px #000000\";\r\n\r\n  const calculateHeightAsPercentage = (scrollTop: number) => {\r\n    const introPaneHeight: number = window.innerHeight - 4;\r\n    if (scrollTop === 0) setHeightAsPercentage(100);\r\n    else {\r\n      const difference = (scrollTop > introPaneHeight) ? 100 : (100 * (scrollTop / introPaneHeight));\r\n      setHeightAsPercentage(100 - difference);\r\n    }\r\n  }\r\n\r\n  const handleScroll = () => {\r\n    const scrollTop: number = appContext.currentScrollTop;\r\n    calculateHeightAsPercentage(scrollTop);\r\n  }\r\n  useEffect(handleScroll, [appContext.currentScrollTop]);\r\n\r\n  return (\r\n    <Backdrop\r\n      className=\"intro-part-1\"\r\n      zIndex={props.order}\r\n      image={__IMAGES__[0]}\r\n      backgroundColor={Colors.dark}\r\n      heightAsPercentage={heightAsPercentage}\r\n    >\r\n      <Intro\r\n        textColor={Colors.white}\r\n        textShadow={textShadowSetting}\r\n      >\r\n        <IntroMessage className=\"intro-1-message\">\r\n          Hello, I'm Anik. I'm a designer and developer who's exploring ways to\r\n          create intuitive, delightful web experiences.\r\n        </IntroMessage>\r\n      </Intro>\r\n      <Screen />\r\n    </Backdrop>\r\n  );\r\n}\r\nexport default IntroPart1;\r\n\r\nconst Screen = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background: #000000;\r\n  opacity: 0.0;\r\n  z-index: 5;\r\n`;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Backdrop, { BackdropInstanceProps } from \"../Backdrops/Backdrop\";\r\nimport { Intro, IntroMessage } from \"..\";\r\nimport { Colors } from \"../../theme/Theme\";\r\nimport { __IMAGES__ } from \"../../images\";\r\n\r\n\r\nexport const IntroPart2: React.FC<BackdropInstanceProps> = (props: BackdropInstanceProps) => {\r\n  const textShadowSetting: string = `2px -2px 2px ${Colors.bright}, 2px 2px 2px ${Colors.bright}, -2px -2px 2px ${Colors.bright}, -2px 2px 2px ${Colors.bright}`;\r\n  return (\r\n    <Backdrop\r\n      className=\"intro-part-2\"\r\n      zIndex={props.order}\r\n      image={__IMAGES__[2]}\r\n      backgroundColor={Colors.bright}\r\n    >\r\n      <Intro\r\n        textColor={Colors.dark}\r\n        textShadow={textShadowSetting}\r\n      >\r\n        <IntroMessage className=\"intro-1-message\">\r\n          Hello, I'm Anik. I'm a designer and developer who's exploring ways to\r\n          create intuitive, delightful web experiences.\r\n        </IntroMessage>\r\n      </Intro>\r\n    </Backdrop>\r\n  );\r\n}\r\nexport default IntroPart2;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Backdrop, { BackdropInstanceProps } from \"../Backdrops/Backdrop\";\r\nimport { Colors } from \"../../theme/Theme\";\r\n\r\n\r\nexport const IntroPart3: React.FC<BackdropInstanceProps> = (props: BackdropInstanceProps) => {\r\n  return (\r\n    <Backdrop\r\n      className=\"intro-part-3\"\r\n      zIndex={props.order}\r\n      backgroundColor={Colors.light}\r\n    >\r\n    </Backdrop>\r\n  );\r\n}\r\nexport default IntroPart3;\r\n\r\n\r\nconst MarginDecorationBase = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  height: 100%;\r\n\r\n  background: url('images/red_dot.png');\r\n  background-repeat: repeat;\r\n  opacity: 0.5;\r\n\r\n  transition: opacity 0.3s;\r\n  z-index: 6;\r\n\r\n  @media screen and (max-width: 1044px) {\r\n    display: none;\r\n    width: 0;\r\n  }\r\n\r\n  @media screen and (min-width: 1044px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst LeftMarginDecoration = styled(MarginDecorationBase)`\r\n  left: 0;\r\n  @media screen and (min-width: 1044px) {\r\n    width: calc(50% - 442px);\r\n  }\r\n`;\r\nconst RightMarginDecoration = styled(MarginDecorationBase)`\r\n  right: 0;\r\n  @media screen and (min-width: 1044px) {\r\n    width: calc(50% - 400px);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { WorkItemAnimationProps } from \"./WorkItem\";\r\nimport { Colors } from \"../../theme\";\r\n\r\ninterface WorkItemImageProps extends WorkItemAnimationProps {\r\n  src: string;\r\n}\r\nexport const WorkItemImage: React.FC<WorkItemImageProps> = (props: WorkItemImageProps) => {\r\n  return (\r\n    <WorkItemImageContainer \r\n      show={props.show}\r\n      className=\"work-item-image-container\"\r\n    >\r\n      <WorkItemImageFrame\r\n        className=\"work-item-image-frame\" \r\n        imageSrc={props.src}\r\n      />\r\n    </WorkItemImageContainer>\r\n  );\r\n}\r\n\r\nconst WorkItemImageContainer = styled.div<WorkItemAnimationProps>`\r\n  position: relative;\r\n  flex-shrink: 0;\r\n  \r\n  opacity: ${props => props.show ? 1.0 : 0.0};\r\n\r\n  z-index: 1;\r\n  overflow: visible;\r\n  transition: 0.2s;\r\n\r\n  & > .work-item-image-frame {\r\n    transition: opacity 0.3s, left 0.3s, box-shadow 0.6s;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    width: 100%;\r\n    height: 120px;\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  @media screen and (min-width: 600px) and (max-width: 800px) {\r\n    width: 160px;\r\n    height: 200px;\r\n    margin-right: 40px;\r\n\r\n    & > .work-item-image-frame {\r\n      display: block;\r\n      position: absolute;\r\n      top: 0;\r\n      left: ${props => props.show ? 0 : -60}px;\r\n      width: 100%;\r\n      height: 100%;\r\n\r\n      box-shadow: ${props => props.show ? `-8px -8px 0 0 ${Colors.bright}` : `0 -8px 0 0 transparent`};\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 800px) {\r\n    width: 200px;\r\n    height: 240px;\r\n    margin-right: 64px;\r\n\r\n    & > .work-item-image-frame {\r\n      display: block;\r\n      position: absolute;\r\n      top: 0;\r\n      left: ${props => props.show ? 0 : -60}px;\r\n      width: 100%;\r\n      height: 100%;\r\n\r\n      box-shadow: ${props => props.show ? `-8px -8px 0 0 ${Colors.bright}` : `0 -8px 0 0 transparent`};\r\n    }\r\n  }\r\n`;\r\n\r\ninterface WorkItemImageComponentProps {\r\n  imageSrc: string;\r\n}\r\nconst WorkItemImageFrame = styled.div<WorkItemImageComponentProps>`\r\n  background: ${Colors.white};\r\n  background: url(${props => props.imageSrc});\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n`;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Paragraph } from \"../../components/TextContent/Text\";\r\nimport { Heading3 } from \"../../components/TextContent/Headings\";\r\nimport { WorkItemAnimationProps } from \"./WorkItem\";\r\nimport { Colors } from \"../../theme\"; \r\nimport { WorkItemInformation } from \"./WorkItems/WorkItemData\";\r\nimport { Button } from \"../../components/Interactive/Button\";\r\n\r\n\r\nexport interface WorkItemDetailComponentProps extends WorkItemAnimationProps, WorkItemInformation {}\r\nexport const WorkItemDetail: React.FC<WorkItemDetailComponentProps> = (props: WorkItemDetailComponentProps) => {\r\n\r\n  const renderDetailsLink = () => {\r\n    if (props.detailsButtonLabel && props.detailsLink) return (\r\n      <MoreDetailsLinkWrapper \r\n        href={props.detailsLink}\r\n        target=\"_blank\"\r\n      >\r\n        <Button importance=\"primary\">\r\n          {props.detailsButtonLabel}\r\n        </Button>\r\n      </MoreDetailsLinkWrapper>\r\n    );\r\n    else return (\r\n      <ComingSoonMessage>\r\n        More details coming soon!\r\n      </ComingSoonMessage>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <WorkItemDetailContainer \r\n      show={props.show}\r\n      className=\"work-item-detail\"\r\n    >\r\n      <WorkItemTitle>{props.title}</WorkItemTitle>\r\n      <WorkItemSubtitle>{props.subtitle}</WorkItemSubtitle>\r\n      <WorkItemDescription className=\"detail-description\">\r\n        {props.description}\r\n      </WorkItemDescription>\r\n      {renderDetailsLink()}\r\n    </WorkItemDetailContainer>\r\n  );\r\n}\r\n\r\nconst WorkItemDetailContainer = styled.div<WorkItemAnimationProps>`\r\n  position: relative;\r\n  opacity: ${props => props.show ? 1.0 : 0.0};\r\n  flex-grow: 1;\r\n  z-index: 3;\r\n  transition: 0.3s;\r\n`;\r\n\r\nconst WorkItemTitle = styled(Heading3)`\r\n  margin: 8px 0 4px;\r\n`;\r\n\r\nconst WorkItemSubtitle = styled.div`\r\n  font-weight: 400;\r\n  color: ${Colors.medium};\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 1.4rem;\r\n  }\r\n\r\n  @media screen and (min-width: 600px) and (max-width: 800px) {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  @media screen and (min-width: 800px) {\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\n\r\nconst WorkItemDescription = styled(Paragraph)`\r\n  margin: 24px 0;\r\n`;\r\n\r\nconst MoreDetailsLinkWrapper = styled.a`\r\n  display: inline-block;\r\n  margin-top: 8px;\r\n`;\r\n\r\nconst ComingSoonMessage = styled(Paragraph)`\r\n  margin-top: 8px;\r\n  color: ${Colors.medium}\r\n`;","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { WorkItemImage } from \"./WorkItemImage\";\r\nimport { WorkItemDetail } from \"./WorkItemDetail\";\r\nimport { WorkItemInformation } from \"./WorkItems/WorkItemData\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport debounce from \"lodash/debounce\";\r\n\r\n\r\n\r\nexport interface WorkItemAnimationProps {\r\n  show: boolean;\r\n}\r\ninterface WorkItemProps extends WorkItemInformation {\r\n  imgURL?: string;\r\n  className?: string;\r\n}\r\nexport const WorkItem: React.FC<WorkItemProps> = (props: WorkItemProps) => {\r\n  const appContext = useContext(AppContext);\r\n  const [showImage, setShowImage] = useState<boolean>(false);\r\n  const [showDetail, setShowDetail] = useState<boolean>(false);\r\n  const [topOffset, setTopOffset] = useState<number | null>(null);\r\n  const workItemRef = useRef<any>(null);\r\n\r\n  const displayImage = () => setShowImage(true);\r\n  const displayDetail = () => setShowDetail(true);\r\n\r\n  const handleScroll = debounce(() => {\r\n    if (!showImage\r\n      && !showDetail\r\n      && workItemRef \r\n      && workItemRef.current\r\n      && topOffset != null\r\n      && appContext.currentScrollTop >= topOffset - (window.innerHeight * 0.85)) {  \r\n      if (!showImage) setTimeout(displayImage, 20);\r\n      if (!showDetail) setTimeout(displayDetail, 200);\r\n    }\r\n  }, 225);\r\n  useEffect(handleScroll, [appContext.currentScrollTop]);\r\n\r\n  useEffect(() => {\r\n    if (workItemRef && workItemRef.current && topOffset == null) {\r\n      const self: Element = workItemRef.current as Element;\r\n      setTopOffset(self.getBoundingClientRect().top);\r\n    }\r\n  }, [workItemRef.current]);\r\n\r\n  return (\r\n    <WorkItemContainer \r\n      className={`work-item work-item-container ${props.className ? `${props.className}-work-item` : ''}`}\r\n      ref={workItemRef}\r\n    >\r\n      <WorkItemImage show={showImage} src={props.imgURL || \"\"} />\r\n      <WorkItemDetail \r\n        show={showDetail}\r\n        title={props.title}\r\n        subtitle={props.subtitle}\r\n        description={props.description}\r\n        detailsButtonLabel={props.detailsButtonLabel}\r\n        detailsLink={props.detailsLink}\r\n      />\r\n    </WorkItemContainer>\r\n  );\r\n}\r\n\r\nconst WorkItemContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n  \r\n  position: relative;\r\n\r\n  z-index: 1;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    flex-wrap: wrap;\r\n    padding: 20px 0 40px;\r\n  }\r\n\r\n  @media screen and (min-width: 600px) {\r\n    flex-wrap: nowrap;\r\n    padding: 40px 0 80px;\r\n  }\r\n`;","export interface WorkItemInformation {\r\n  title: string;\r\n  subtitle: string;\r\n  description: string;\r\n  detailsButtonLabel?: string\r\n  detailsLink?: string;\r\n}\r\n\r\n// Project Insight\r\nexport const WorkItem_ProjectInsight: WorkItemInformation = {\r\n  title: \"Project Insight\",\r\n  subtitle: \"UX Research, Usability\",\r\n  description: `\r\n    I'm working closely with fellow designers at HCSS to create a tool that will \r\n    empower development teams to quickly and easily gather insights from users,\r\n    helping research play a more decisive role in our design processes.\r\n  `\r\n}\r\n\r\n// Fort Bend FloodReady App\r\nexport const WorkItem_FloodReady: WorkItemInformation = {\r\n  title: \"FloodReady\",\r\n  subtitle: \"UX Design, Prototyping\",\r\n  description: `\r\n    I prototyped a mobile emergency preparedness app to address some of the crucial \r\n    needs and frustrations expressed by Fort Bend county residents in the wake of \r\n    Hurricane Harvey and the ensuing devastation in Houston.\r\n  `,\r\n  detailsButtonLabel: `Read more about this project`,\r\n  detailsLink: 'https://www.behance.net/gallery/61525575/Fort-Bend-FloodReady-App',\r\n}\r\n\r\n// Frost Recording Ensemble\r\nexport const WorkItem_FrostEnsemble: WorkItemInformation = {\r\n  title: \"Frost Recording Ensemble\",\r\n  subtitle: \"Branding, Content\",\r\n  description: `\r\n    As the premier pop music ensemble at the University of Miami underwent a kind of \r\n    rebirth, I played a key role in its rebranding, designing new logos, album covers, \r\n    and a variety of assets for social media platforms.\r\n  `,\r\n  detailsButtonLabel: `More details and examples`,\r\n  detailsLink: 'https://anikcreative.myportfolio.com/frostensemble',\r\n}\r\n\r\n// MWP Studio\r\nexport const WorkItem_MWPStudio: WorkItemInformation = {\r\n  title: \"MWP Studio Handbook\",\r\n  subtitle: \"UX Design, Content\",\r\n  description: `\r\n    When policies promoting responsible and equitable use of educational resources were \r\n    met with confusion and lack of buy-in from students, I took the initiative to ensure \r\n    effective communication of policy changes and their purpose.\r\n  `,\r\n  detailsButtonLabel: `More details about this project`,\r\n  detailsLink: 'https://anikcreative.myportfolio.com/mwpstudiopol',\r\n}","import React from \"react\";\r\nimport { WorkItem } from \"../WorkItem\";\r\nimport {\r\n  WorkItem_ProjectInsight,\r\n} from \"./WorkItemData\";\r\n\r\nexport const ProjectInsight = () => {\r\n  return (\r\n    <WorkItem\r\n      title={WorkItem_ProjectInsight.title}\r\n      subtitle={WorkItem_ProjectInsight.subtitle}\r\n      description={WorkItem_ProjectInsight.description}\r\n      className=\"project-insight\"\r\n    />\r\n  );\r\n}\r\nexport default ProjectInsight;","import React from \"react\";\r\nimport { WorkItem } from \"../WorkItem\";\r\nimport { WorkItem_FloodReady } from \"./WorkItemData\";\r\n\r\nexport const FloodReady = () => {\r\n  return (\r\n    <WorkItem\r\n      title={WorkItem_FloodReady.title}\r\n      subtitle={WorkItem_FloodReady.subtitle}\r\n      description={WorkItem_FloodReady.description}\r\n      imgURL={\"images/workitems/floodready.jpg\"}\r\n      detailsButtonLabel={WorkItem_FloodReady.detailsButtonLabel}\r\n      detailsLink={WorkItem_FloodReady.detailsLink}\r\n      className=\"mwp-studio-resources\"\r\n    />\r\n  );\r\n}\r\nexport default FloodReady;","import React from \"react\";\r\nimport { WorkItem } from \"../WorkItem\";\r\nimport { WorkItem_FrostEnsemble } from \"./WorkItemData\";\r\n\r\nexport const FrostEnsemble = () => {\r\n  return (\r\n    <WorkItem\r\n      title={WorkItem_FrostEnsemble.title}\r\n      subtitle={WorkItem_FrostEnsemble.subtitle}\r\n      description={WorkItem_FrostEnsemble.description}\r\n      imgURL={\"images/workitems/frostensemble.jpg\"}\r\n      detailsButtonLabel={WorkItem_FrostEnsemble.detailsButtonLabel}\r\n      detailsLink={WorkItem_FrostEnsemble.detailsLink}\r\n      className=\"frost-rec-ensemble\"\r\n    />\r\n  );\r\n}\r\nexport default FrostEnsemble;","import React from \"react\";\r\nimport { WorkItem } from \"../WorkItem\";\r\nimport {\r\n  WorkItem_MWPStudio,\r\n} from \"./WorkItemData\";\r\n\r\nexport const MWPStudio = () => {\r\n  return (\r\n    <WorkItem\r\n      title={WorkItem_MWPStudio.title}\r\n      subtitle={WorkItem_MWPStudio.subtitle}\r\n      description={WorkItem_MWPStudio.description}\r\n      imgURL={\"images/workitems/mwpstudio.jpg\"}\r\n      detailsButtonLabel={WorkItem_MWPStudio.detailsButtonLabel}\r\n      detailsLink={WorkItem_MWPStudio.detailsLink}\r\n      className=\"mwp-studio-resources\"\r\n    />\r\n  );\r\n}\r\nexport default MWPStudio;","import React from \"react\";\r\nimport { Section } from \"../../components\";\r\nimport { Colors } from \"../../theme\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  ProjectInsight,\r\n  FloodReady,\r\n  FrostEnsemble,\r\n  MWPStudio\r\n} from \"./WorkItems\";\r\n\r\n\r\n\r\ninterface WorkSectionProps {\r\n  containerRef?: React.RefObject<HTMLDivElement>;\r\n}\r\nexport const Work: React.FC<WorkSectionProps> = (props: WorkSectionProps) => {\r\n  return (\r\n    <StyledWorkSection \r\n      className=\"work-section\"\r\n      ref={props.containerRef}\r\n    >\r\n      <ProjectInsight/>\r\n      <FloodReady />\r\n      <FrostEnsemble />\r\n      <MWPStudio />\r\n    </StyledWorkSection>\r\n  );\r\n}\r\nexport default Work;\r\n\r\nconst StyledWorkSection = styled(Section)`\r\n  padding-top: 20px;\r\n  padding-bottom: 0;\r\n  background: ${Colors.light};\r\n`;","import React from \"react\";\r\nimport { Section, Paragraph } from \"../../components\";\r\nimport { Colors } from \"../../theme\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface AboutSectionProps {\r\n  containerRef?: React.RefObject<HTMLDivElement>;\r\n}\r\nexport const About: React.FC<AboutSectionProps> = (props: AboutSectionProps) => {\r\n  return (\r\n    <StyledAboutSection \r\n      className=\"about-section\"\r\n      ref={props.containerRef}\r\n    >\r\n      <Paragraph addSpaceAfter>\r\n        I'm a User Experience Developer at <a href=\"https://www.hcss.com\" target=\"_blank\">HCSS</a>, helping \r\n        build enterprise web applications for the construction industry. Most of my work focuses on interaction \r\n        design, front-end development with React, rapid prototyping for emerging products, and rescuing those \r\n        stranded in CSS.\r\n      </Paragraph>\r\n      <Paragraph addSpaceAfter>\r\n        Whether in familiar territory, or in uncharted waters, I love finding ways to interpret and analyze \r\n        complex challenges. I've worked with artists, designers, choreographers, film directors, game developers, \r\n        and all sorts of talented people. I'm always on the lookout for cool ideas on the horizon — get in touch \r\n        if you have one and are looking to collaborate!\r\n      </Paragraph>\r\n    </StyledAboutSection>\r\n  );\r\n}\r\nexport default About;\r\n\r\nconst StyledAboutSection = styled(Section)`\r\n  background: ${Colors.white};\r\n\r\n  & > * {\r\n    max-width: 600px;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    padding-top: 60px;\r\n    padding-bottom: 60px;\r\n  }\r\n\r\n  @media screen and (min-width: 600px) {\r\n    padding-top: 80px;\r\n    padding-bottom: 80px;\r\n  }\r\n`;","import React, { useContext } from \"react\";\r\nimport { Scrollbars, positionValues } from \"react-custom-scrollbars\";\r\nimport { Colors } from \"./theme/Theme\";\r\nimport { AppContext } from \"./contexts/AppContext\";\r\n\r\nexport interface ScrollPositionValues extends positionValues {};\r\ninterface ScrollAreaProps {\r\n  children?: React.ReactNode | React.ReactNodeArray;\r\n}\r\nconst ScrollArea: React.FunctionComponent<ScrollAreaProps> = (props: ScrollAreaProps): JSX.Element => {\r\n  const appContext = useContext(AppContext);\r\n\r\n  const handleScroll = (values: positionValues) => appContext.setCurrentScrollTop(values.scrollTop);\r\n\r\n  const renderScrollbarTrack = (trackProps: any) => {\r\n    const { style, ...rest } = trackProps;\r\n    const customStyles = {\r\n      width: '20px',\r\n      top: '0',\r\n      right: '0',\r\n      bottom: '0',\r\n      borderRadius: '0',\r\n      backgroundColor: `transparent`,\r\n    };\r\n\r\n    return (\r\n      <div\r\n        {...rest}\r\n        style={{ ...style, ...customStyles }}\r\n        className=\"scrollbar-track-vertical\"\r\n      />\r\n    );\r\n  }\r\n\r\n  const renderScrollbarThumb = (thumbProps: any) => {\r\n    const { style, ...rest } = thumbProps;\r\n    const customStyles = {\r\n      backgroundColor: `${Colors.dark}`,\r\n      zIndex: 2,\r\n      transform: 'translate3d(0)'\r\n    };\r\n\r\n    return (\r\n      <div\r\n        {...rest}\r\n        style={{ ...style, ...customStyles }}\r\n        className=\"scrollbar-thumb-vertical\"\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Scrollbars\r\n      onScrollFrame={handleScroll}\r\n      renderTrackVertical={renderScrollbarTrack}\r\n      renderThumbVertical={renderScrollbarThumb}\r\n      style={{ zIndex: 2 }}\r\n    >\r\n      {props.children}\r\n    </Scrollbars>\r\n  );\r\n}\r\nexport default ScrollArea;","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useInterval from '@use-it/interval';\r\nimport { Colors } from \"./theme/Theme\";\r\n\r\ntype LoaderStates = \"active\" | \"complete\" | \"hidden\";\r\ninterface LoaderProps {\r\n  imagesLoaded?: boolean;\r\n}\r\nconst Loader: React.FunctionComponent<LoaderProps> = (props: LoaderProps): JSX.Element => {\r\n  const [completion, setCompletion] = useState<number>(0.00);      // value from 0.00 to 1.00, determining current completion of loading\r\n  const [loaderState, setLoaderState] = useState<LoaderStates>(\"active\");\r\n  const [delay, setDelay] = useState<number | null>(10);\r\n  \r\n  useInterval(() => {\r\n    setCompletion((currentCompletion) => currentCompletion + 0.01);\r\n  }, delay);\r\n  \r\n  useEffect(() => {\r\n    if (completion > 1.20) {\r\n      setDelay(null);\r\n      if (loaderState === \"active\") {\r\n        setLoaderState(\"complete\");\r\n        setTimeout(() => setLoaderState(\"hidden\"), 825);\r\n      }\r\n    }\r\n  }, [completion]);\r\n\r\n  const getTopCompletion = (currentCompletion: number): number => {\r\n    if (currentCompletion <= 0.25) return currentCompletion * 4;\r\n    else return 1.00;\r\n  }\r\n  const getRightCompletion = (currentCompletion: number): number => {\r\n    if (currentCompletion <= 0.25) return 0.00;\r\n    else if (currentCompletion > 0.25 && currentCompletion <= 0.50)\r\n      return (currentCompletion * 4) - 1;\r\n    else return 1.00;\r\n  }\r\n  const getBottomCompletion = (currentCompletion: number): number => {\r\n    if (currentCompletion <= 0.50) return 0.00;\r\n    else if (currentCompletion > 0.50 && completion <= 0.75)\r\n      return (currentCompletion * 4) - 2;\r\n    else return 1.00;\r\n  }\r\n  const getLeftCompletion = (currentCompletion: number): number => {\r\n    if (currentCompletion <= 0.75) return 0.00;\r\n    else return (currentCompletion * 4) - 3;\r\n  }\r\n\r\n  return (\r\n    <StyledLoader \r\n      className=\"loader\"\r\n      loaderState={loaderState}\r\n    >\r\n      <ProgressBarTop completion={getTopCompletion(completion)}/>\r\n      <ProgressBarRight completion={getRightCompletion(completion)}/>\r\n      <ProgressBarBottom completion={getBottomCompletion(completion)}/>\r\n      <ProgressBarLeft completion={getLeftCompletion(completion)}/>\r\n    </StyledLoader>\r\n  );\r\n}\r\nexport default Loader;\r\n\r\ninterface StyledLoaderProps {\r\n  loaderState: LoaderStates;\r\n}\r\nconst StyledLoader = styled.div<StyledLoaderProps>`\r\n  display: ${props => props.loaderState === \"hidden\" ?\r\n    \"none\" : \"block\"};\r\n  position: absolute;\r\n  top: -4px;\r\n  left: -4px;\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  background: ${Colors.white};\r\n  opacity: ${props => props.loaderState === \"active\" ?\r\n    \"1.0\" : \"0.0\"};\r\n  transition: 0.8s;\r\n  z-index: 1000;\r\n`;\r\n\r\ninterface ProgressBarProps {\r\n  completion: number;\r\n}\r\nconst ProgressBarBase = styled.div<ProgressBarProps>`\r\n  position: absolute;\r\n  background: ${Colors.accent};\r\n`;\r\nconst ProgressBarTop = styled(ProgressBarBase)`\r\n  top: 0;\r\n  left: 0;\r\n  width: ${props => (props.completion * 100)}%;\r\n  height: 4px;\r\n`;\r\nconst ProgressBarRight = styled(ProgressBarBase)`\r\n  top: 0;\r\n  right: 0;\r\n  width: 4px;\r\n  height: ${props => (props.completion * 100)}%;\r\n`;\r\nconst ProgressBarBottom = styled(ProgressBarBase)`\r\n  bottom: 0;\r\n  right: 0;\r\n  width: ${props => (props.completion * 100)}%;\r\n  height: 4px;\r\n`;\r\nconst ProgressBarLeft = styled(ProgressBarBase)`\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 4px;\r\n  height: ${props => (props.completion * 100)}%;\r\n`;","import React, { useContext, useLayoutEffect, useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Colors } from \"./theme\";\r\nimport {\r\n  IntroSpacer, IntroButtons,\r\n  IntroPart1, IntroPart2,\r\n  BackdropImageSpacer,\r\n  Nav, Footer,\r\n  About, Work, Contact\r\n} from \"./content\";\r\nimport ScrollArea from \"./ScrollArea\";\r\nimport Loader from \"./Loader\";\r\nimport { AppContext } from \"./contexts/AppContext\";\r\n\r\n\r\n\r\nconst App: React.FunctionComponent = () => {\r\n  const appContext = useContext(AppContext);\r\n  const [borderColor, setBorderColor] = useState<string>(Colors.accent);\r\n  const [introButtonsVisible, setIntroButtonsVisible] = useState<boolean>(true);\r\n\r\n  const [invertedScrollThumbHeight, setInvertedScrollThumbHeight] = useState<number>(0);\r\n  const [invertedScrollThumbAnchor, setInvertedScrollThumbAnchor] = useState<\"top\" | \"bottom\">(\"top\");\r\n\r\n  // Container refs for each section\r\n  const introButtonsRef = useRef<HTMLDivElement>(null);\r\n  const contentContainerRef = useRef<HTMLDivElement>(null);\r\n  const aboutContainerRef = useRef<HTMLDivElement>(null);\r\n  const contactContainerRef = useRef<HTMLDivElement>(null);\r\n  const footerContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Calculate inverted scroll thumb height\r\n  const calculateInvertedScrollThumbHeight = () => {\r\n    if (contentContainerRef && contentContainerRef.current\r\n      && contactContainerRef && contactContainerRef.current) {\r\n      const scrollbarVerticalThumb: HTMLDivElement | null = contentContainerRef.current.querySelector('.scrollbar-thumb-vertical');\r\n      const introBackdrop: HTMLDivElement | null = document.querySelector('.intro-part-1');\r\n      const contactBounds: ClientRect | DOMRect = contactContainerRef.current.getBoundingClientRect();\r\n\r\n      if (scrollbarVerticalThumb && introBackdrop) {\r\n        const scrollThumbBounds: ClientRect | DOMRect = scrollbarVerticalThumb.getBoundingClientRect();\r\n        const introBackdropBounds: ClientRect | DOMRect = introBackdrop.getBoundingClientRect();\r\n\r\n        if (scrollThumbBounds.bottom <= introBackdropBounds.bottom) {\r\n          setInvertedScrollThumbAnchor(\"top\");\r\n          setInvertedScrollThumbHeight(scrollThumbBounds.height)\r\n        }\r\n        else if (scrollThumbBounds.top <= introBackdropBounds.bottom) {\r\n          setInvertedScrollThumbAnchor(\"top\");\r\n          setInvertedScrollThumbHeight(introBackdropBounds.bottom - scrollThumbBounds.top);\r\n        }\r\n        else if (scrollThumbBounds.bottom <= contactBounds.top) {\r\n          setInvertedScrollThumbAnchor(\"bottom\");\r\n          setInvertedScrollThumbHeight(0);\r\n        }\r\n        else {\r\n          setInvertedScrollThumbAnchor(\"bottom\");\r\n          setInvertedScrollThumbHeight(scrollThumbBounds.bottom - contactBounds.top);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setTimeout(calculateInvertedScrollThumbHeight, 500)\r\n  }, []);\r\n\r\n  // Determine in intro buttons should be shown (at top) based on current scroll position\r\n  const determineIntroButtonsVisibility = () => {\r\n    if (aboutContainerRef && aboutContainerRef.current\r\n      && introButtonsRef && introButtonsRef.current) {\r\n      const introButtonsBottom = introButtonsRef.current.getBoundingClientRect().bottom;\r\n      const worksContainerTop = aboutContainerRef.current.getBoundingClientRect().top;\r\n\r\n      if (introButtonsBottom >= worksContainerTop - 20) setIntroButtonsVisible(false);\r\n      else setIntroButtonsVisible(true);\r\n    }\r\n  }\r\n\r\n  // Perform animation stage changes based on scroll position\r\n  const handleScroll = () => {\r\n    const scrollTop: number = appContext.currentScrollTop;\r\n\r\n    determineIntroButtonsVisibility();\r\n    calculateInvertedScrollThumbHeight();\r\n    \r\n    if (contactContainerRef && contactContainerRef.current\r\n      && scrollTop >= contactContainerRef.current.offsetTop - (window.innerHeight * 0.75)) {\r\n      setBorderColor(Colors.dark);\r\n    }\r\n    else setBorderColor(Colors.accent);\r\n  }\r\n  useLayoutEffect(handleScroll, [false]);\r\n  useEffect(handleScroll, [appContext.currentScrollTop]);\r\n\r\n  return (\r\n    <AppContainer\r\n      className=\"app-container\"\r\n      borderColor={borderColor}\r\n    >\r\n      <Loader/>\r\n      \r\n      <BackdropContainer className=\"backdrop-container\">\r\n        <IntroPart1 order={5} />\r\n        <IntroPart2 order={4} />\r\n      </BackdropContainer>\r\n\r\n      <Nav\r\n        backgroundColor={Colors.light}\r\n        textColor={Colors.textDefault}\r\n      />\r\n      \r\n      <Content\r\n        className=\"main-content-container\"\r\n        invertedScrollThumbHeight={invertedScrollThumbHeight}\r\n        invertedScrollThumbAnchor={invertedScrollThumbAnchor}\r\n        ref={contentContainerRef}\r\n      >\r\n        <IntroButtons\r\n          visible={introButtonsVisible}\r\n          containerRef={introButtonsRef}\r\n        />\r\n        <ScrollArea>\r\n          <IntroSpacer />\r\n\r\n          <About containerRef={aboutContainerRef} />\r\n\r\n          <Work />\r\n\r\n          {/* <BackdropImageSpacer /> */}\r\n\r\n          <Contact containerRef={contactContainerRef}/>\r\n\r\n          <Footer containerRef={footerContainerRef}/>\r\n        </ScrollArea>\r\n      </Content>\r\n    </AppContainer>\r\n  );\r\n}\r\nexport default App;\r\n\r\ninterface AppContainerProps {\r\n  borderColor: string;\r\n}\r\nconst AppContainer = styled.div<AppContainerProps>`\r\n  position: relative;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  min-width: 320px;\r\n\r\n  background: none;\r\n  border-top: 4px solid ${props => props.borderColor};\r\n  border-right: 4px solid ${props => props.borderColor};\r\n  border-bottom: 6px solid ${props => props.borderColor};\r\n  border-left: 4px solid ${props => props.borderColor};\r\n\r\n  z-index: 1;\r\n  transform: translate3d(0);\r\n  transition: border-color 0.4s;\r\n\r\n  &,\r\n  & * {\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nconst BackdropContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1;\r\n`;\r\n\r\ninterface ContentProps {\r\n  invertedScrollThumbHeight: number;\r\n  invertedScrollThumbAnchor: \"top\" | \"bottom\";\r\n}\r\nconst Content = styled.main<ContentProps>`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n\r\n  transform: translate3d(0);\r\n  z-index: 3;\r\n\r\n  & .scrollbar-thumb-vertical {\r\n    transform: translate3d(0);\r\n\r\n    :after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: ${props => props.invertedScrollThumbAnchor === \"top\" ? 0 : \"unset\"};\r\n      bottom: ${props => props.invertedScrollThumbAnchor === \"bottom\" ? 0 : \"unset\"};;\r\n      left: 0;\r\n      width: 100%;\r\n      height: ${props => props.invertedScrollThumbHeight}px;\r\n      max-height: 100%;\r\n      background: ${Colors.white};\r\n      transform: translate3d(0);\r\n      z-index: 4;\r\n    }\r\n  }\r\n`;","import React from \"react\";\r\nimport App from \"./App\";\r\nimport { Theme } from \"./theme\";\r\nimport { AppContextProvider } from \"./contexts/AppContext\";\r\n\r\nconst MountApp = () => {\r\n  return (\r\n    <AppContextProvider>\r\n      <App/>\r\n      <Theme/>\r\n    </AppContextProvider>\r\n  );\r\n}\r\nexport default MountApp;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MountApp from './MountApp';\r\nimport \"normalize.css\";\r\nimport \"./theme/fonts.css\";\r\nimport \"./theme/base.css\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<MountApp />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}